name: Terraform Plan and Apply Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-plan:
    runs-on: ubuntu-latest
    outputs:
      first_run: ${{ steps.check_first_run.outputs.first_run }}
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: "06db7845-49d9-4a99-b5c3-ed940162972d"
          tenant-id: "6b99c178-e515-4bb7-bda4-073a8601a463"
          subscription-id: "ed650814-527f-4ad3-98f7-9af062cc8adf"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Set First Run Output
        id: check_first_run
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "::set-output name=first_run::true"
          else
            echo "::set-output name=first_run::false"
          fi

  apply-deployment:
    runs-on: ubuntu-latest
    needs: build-and-plan
    if: needs.build-and-plan.outputs.first_run == 'false'
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: "06db7845-49d9-4a99-b5c3-ed940162972d"
          tenant-id: "6b99c178-e515-4bb7-bda4-073a8601a463"
          subscription-id: "ed650814-527f-4ad3-98f7-9af062cc8adf"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Apply Terraform Plan
        run: terraform apply tfplan
